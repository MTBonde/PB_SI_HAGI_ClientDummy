
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - hagi-net
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - hagi-net

  auth:
    image: ghcr.io/mtbonde/hagi-authservice:0.2.1
    ports:
      - "5000:8080"
    networks:
      - hagi-net

  registry:
    image: ghcr.io/mtbonde/hagi-registryservice:0.2.3
    ports:
      - "5001:8080"
    networks:
      - hagi-net

  game:
    image: ghcr.io/alexanderlind98/unrealmp_server:latest
    ports:
      - "5002:7777/udp"
      - "5002:8080"
    environment:
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=5002
      - REGISTRY_URL=http://registry:8080
    networks:
      - hagi-net

  session:
    image: ghcr.io/mtbonde/hagi-sessionservice:0.2.1
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis:6379
    networks:
      - hagi-net

  chat:
    image: ghcr.io/mtbonde/hagi-chatservice:0.2.0
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - hagi-net

  relay:
    image: ghcr.io/mtbonde/hagi-relayservice:0.3.0
    ports:
      - "5004:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - hagi-net

  dummyclient:
    build:
      context: ./DummyClient
      dockerfile: Dockerfile
    depends_on:
      - auth
      - registry
      - game
      - relay
    environment:
      - AUTH_URL=http://auth:8080
      - REGISTRY_URL=http://registry:8080
      - GAME_URL=http://game:8080
      - RELAY_URL=http://relay:8080
    networks:
      - hagi-net

networks:
  hagi-net:
    driver: bridge
