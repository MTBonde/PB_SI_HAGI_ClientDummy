
services:
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "5672:5672"
      - "15672:15672"
    command: >
      bash -c "
      echo 'HAGIDEVRABBITCOOKIE123456789' > /var/lib/rabbitmq/.erlang.cookie &&
      chmod 400 /var/lib/rabbitmq/.erlang.cookie &&
      chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie &&
      rabbitmq-server
      "
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - hagi-net
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - hagi-net

  auth:
    image: ghcr.io/mtbonde/hagi-authservice:0.4.0
    healthcheck:
      test: ["CMD", "bash", "-c", "timeout 2 bash -c '</dev/tcp/127.0.0.1/8080'"]
      interval: 5s
      timeout: 3s
      retries: 30
    ports:
      - "5000:8080"
    networks:
      - hagi-net

  registry:
    image: ghcr.io/mtbonde/hagi-registryservice:0.3.0
    healthcheck:
      test: [ "CMD", "bash", "-c", "timeout 2 bash -c '</dev/tcp/127.0.0.1/8080'" ]
      interval: 5s
      timeout: 3s
      retries: 30
    ports:
      - "5001:8080"
    networks:
      - hagi-net

  gs1:
    image: ghcr.io/alexanderlind98/unrealmp_server:latest
    ports:
      - "5002:7777/udp"
      - "5002:8080"
    environment:
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=5002
      - REGISTRY_URL=http://registry:8080
      - REGISTRY_ENDPOINT=/api/v0.3.0/Registry/register
    networks:
      - hagi-net
  
  gs2:
    image: ghcr.io/alexanderlind98/unrealmp_server:latest
    ports:
      - "5003:7777/udp"
      - "5003:8080"
    environment:
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=5003
      - REGISTRY_URL=http://registry:8080
      - REGISTRY_ENDPOINT=/api/v0.3.0/Registry/register
    networks:
      - hagi-net
        
  gs3:
    image: ghcr.io/alexanderlind98/unrealmp_server:latest
    ports:
      - "5004:7777/udp"
      - "5004:8080"
    environment:
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=5004
      - REGISTRY_URL=http://registry:8080
      - REGISTRY_ENDPOINT=/api/v0.3.0/Registry/register
    networks:
      - hagi-net

  session:
    image: ghcr.io/mtbonde/hagi-sessionservice:0.4.0
    healthcheck:
      test: [ "CMD", "bash", "-c", "timeout 2 bash -c '</dev/tcp/127.0.0.1/8080'" ]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - hagi-net

  relay:
    image: ghcr.io/mtbonde/hagi-relayservice:0.5.2
    healthcheck:
      test: [ "CMD", "bash", "-c", "timeout 2 bash -c '</dev/tcp/127.0.0.1/8080'" ]
      interval: 5s
      timeout: 3s
      retries: 30
    ports:
      - "5005:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      session:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - hagi-net

  dummyclient:
    build:
      context: ./DummyClient
      dockerfile: Dockerfile
    depends_on:
      auth:
        condition: service_healthy   
      registry:
        condition: service_healthy   
      game:
        condition: service_started
      relay:
        condition: service_healthy  
    environment:
      - AUTH_URL=http://auth:8080
      - REGISTRY_URL=http://registry:8080
      - GAME_URL=http://game:8080
      - RELAY_URL=http://relay:8080
    networks:
      - hagi-net

networks:
  hagi-net:
    driver: bridge

volumes:
  rabbitmq_data:
